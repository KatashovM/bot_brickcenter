
from aiogram import Router
from aiogram.types import Message
import yaml
from pathlib import Path
router=Router()
DIALOGS=yaml.safe_load((Path(__file__).parent.parent/"dialogs.yaml").read_text(encoding="utf-8"))
@router.message(lambda m: m.text=="üí¨ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
async def prompt_hint(message: Message): await message.answer("–ó–∞–¥–∞–π—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å. –Ø –æ—Ç–≤–µ—á—É –ø–æ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π.")
@router.message()
async def smalltalk_or_faq(message: Message):
    text=(message.text or "").lower().strip()
    for item in DIALOGS.get("smalltalk", []):
        if any(q in text for q in item.get("q", [])): return await message.answer(item.get("a",""))
    faq=DIALOGS.get("faq",{})
    if any(w in text for w in ["–¥–æ—Å—Ç–∞–≤","–∞–¥—Ä–µ—Å","–ø—Ä–∏–≤–µ–∑"]): return await message.answer(faq.get("delivery",""))
    if any(w in text for w in ["–æ–ø–ª–∞—Ç","—Å—á–µ—Ç","—Ü–µ–Ω–∞","—Å—Ç–æ–∏–º"]): return await message.answer(faq.get("payment",""))
    if any(w in text for w in ["–º–∞—Ç–µ—Ä–∏–∞–ª","–∫–∏—Ä–ø–∏—á","–±–ª–æ–∫"]): return await message.answer(faq.get("materials",""))
    return await message.answer('–ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω—è–ª. –ú–æ–≥—É –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É: –Ω–∞–∂–º–∏—Ç–µ "üß± –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É".')
